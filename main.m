function varargout = main(varargin)
% main - Primary GUI script for the BJNL toolbox
% This function is called by the bjnl function and opens the BJNL
% toolbox GUI.
%
% Syntax:  varargout = main(varargin)
%
% See also: bjnl

% Add paths
varargout = cell(1);

myfont = 'default';

if ispc
    myfont = 'default';
elseif ismac
    myfont = 12;
end

% Check if an instance of bjnl already running
hs = findall(0,'tag','bjnl');
if (isempty(hs))
    hs = addcomponents;
    set(hs.fig,'Visible','on');
else
    figure(hs);
end
data = struct();
results = struct();
dataLoaded = 0;

    function hs = addcomponents
        % Add components, save handles in a struct
        hs.fig = figure('Tag','bjnl','units', 'character', 'position', [50 15 109 30.8],...
            'MenuBar', 'none',... 'position', [400 250 650 400],...
            'NumberTitle','off',...
            'Name','BJNL',...
            'Resize','off',...
            'Visible','off',...
            'Color',[0/256, 70/256, 0/256]);
        text1 = uicontrol('Style','text','String','Bayesian Joint Network Learning Toolbox',...
            'ForegroundColor',[250/256,192/256,31/256],'BackgroundColor',get(hs.fig,'color'),...
            'FontSize',28,'units', 'normalized',...
            'position',[0.01,0.87,0.8,0.1]); %#ok<NASGU>
        fileMenu = uimenu('Label','File');
        uimenu(fileMenu,'Label','Save','Callback','disp(''save'')');
        uimenu(fileMenu,'Label','Quit','Callback',@closeFig,...
            'Separator','on','Accelerator','Q');
        helpMenu = uimenu('Label','Help'); %#ok<NASGU>
        
        textalign = 'left';
        
        tabGroup = uitabgroup('Parent', hs.fig,...
            'Tag','tabGroup',...
            'units', 'normalized',...
            'position', [0 0 1 0.85]);
        bjnlTab = uitab('Parent', tabGroup, 'Tag','bjnlTab','Title', 'BJNL');
        visualizeTab = uitab('Parent', tabGroup, 'Tag','visTab','Title', 'Visualize');
        
        inputTab = uipanel('Parent',bjnlTab, 'units', 'normalized', ...
            'Position',[0.01 0.61 0.38 0.38],...
            'Title','1. Setup','FontSize',myfont);
        analysisFolder = uicontrol('Parent',inputTab,...
            'units', 'normalized', ...
            'Style','edit','Position',[0.05 0.70 0.5 0.2],...
            'FontSize',myfont,'HorizontalAlignment',textalign,...
            'Tag','analysisFolder',...
            'BackgroundColor','white'); %#ok<NASGU>
        selectAnalysisFolder = uicontrol('Parent',inputTab,...
            'Style','pushbutton',...
            'String','Analysis Folder', 'units', 'normalized',...
            'Position',[0.55 0.70 0.4 0.2],...
            'Callback',@selectAnalysisFolder_Callback,...
            'UserData','hello'); %#ok<NASGU>
        analysisData = uicontrol('Parent',inputTab,...
            'units', 'normalized', ...
            'Style','edit','Position',[0.05 0.40 0.5 0.2],...
            'FontSize',myfont,'HorizontalAlignment',textalign,...
            'Tag','analysisData',...
            'BackgroundColor','white'); %#ok<NASGU>
        selectAnalysisData = uicontrol('Parent',inputTab,...
            'Style','pushbutton',...
            'Units', 'normalized',...
            'String','Select Analysis Data',...
            'Position',[0.55 0.40 0.4 0.2],...
            'Callback',@selectInputData_Callback,...
            'UserData','hello'); %#ok<NASGU>
        prefixBox = uicontrol('Parent',inputTab,...
            'units', 'normalized', ...
            'Style','edit','Position',[0.05 0.10 0.5 0.2],...
            'FontSize',myfont,'HorizontalAlignment',textalign,...
            'Tag','prefixBox',...
            'BackgroundColor','white'); %#ok<NASGU>
        textPrefixBox = uicontrol('Parent',inputTab,...
            'Style','text','units', 'normalized', ...
            'Position',[0.55, 0.15, 0.4, 0.15],...
            'String','Prefix for Analysis','FontSize',myfont); %#ok<NASGU>
        
        % Tab for the analysis settings
        settingsTab = uipanel('Parent', bjnlTab, 'units', 'normalized', ...
            'Tag', 'settingsTab',...
            'Position',[0.01 0.01 0.38 0.6],...
            'Title','2. Analysis Settings','FontSize',myfont);
        textBURNINBox = uicontrol('Parent',settingsTab,...
            'Style','text','units', 'normalized', ...
            'Position',[-0.1, 0.82, 0.7, 0.1],...
            'String','Burnin Iterations','FontSize',myfont); %#ok<NASGU>
        numBURNINBox = uicontrol('Parent', settingsTab,...
            'Tag','numBURNIter',...
            'units', 'normalized', ...
            'Style','edit','Position',[0.6, 0.8, 0.3, 0.13],...
            'FontSize',myfont,'HorizontalAlignment',textalign,...
            'BackgroundColor','white'); %#ok<NASGU>
        textMCMCBox = uicontrol('Parent',settingsTab,...
            'Style','text','units', 'normalized', ...
            'Position',[-0.1, 0.62, 0.7, 0.1],...
            'String','MCMC Iterations','FontSize',myfont); %#ok<NASGU>
        numMCMCBox = uicontrol('Parent', settingsTab,...
            'Tag','numMCMCIter',...
            'units', 'normalized', ...
            'Style','edit','Position',[0.6, 0.6, 0.3, 0.13],...
            'FontSize',myfont,'HorizontalAlignment',textalign,...
            'BackgroundColor','white'); %#ok<NASGU>
        saveMCMCIterResults = uicontrol('Parent',settingsTab,...
            'Style','checkbox', 'units', 'normalized',...
            'Tag','saveMCMCBox',...
            'string', 'Save MCMC Iteration Results',...
            'Position',[0.08 0.4 0.7 0.15]); %#ok<NASGU>
        runAnalysis = uicontrol('Parent',settingsTab,...
            'Style','pushbutton',...
            'Units', 'normalized',...
            'String','Run BJNL',...
            'Position',[0.3 0.1 0.4 0.15],...
            'Callback', @runBJNLAnalysis); %#ok<NASGU>
        
        % Tab showing the trace plots
        tracePanel = uipanel('Parent', bjnlTab, 'units', 'normalized', ...
            'Tag', 'plotsPanel',...
            'Position',[0.40 0.01 0.6 0.98],...
            'Title','3. Analysis Progress','FontSize',myfont);
        iterChangeOmega = axes('Parent',tracePanel,...
            'units', 'normalized',...
            'Position',[0.05 0.75 0.67 0.20],...
            'Tag','iterChangeOmega'); %#ok<NASGU>
        textRowOmega = uicontrol('Parent',tracePanel,...
            'Style','text','units', 'normalized', ...
            'Position',[0.85, 0.83, 0.15, 0.1],...
            'String','Row Index','FontSize',myfont); %#ok<NASGU>
        textColOmega = uicontrol('Parent',tracePanel,...
            'Style','text','units', 'normalized', ...
            'Position',[0.85, 0.75, 0.15, 0.1],...
            'String','Col. Index','FontSize',myfont); %#ok<NASGU>
        omegaInd1 = uicontrol('Parent', tracePanel,...
            'Style', 'popupmenu', ...
            'Units', 'Normalized', ...
            'Position', [0.72, 0.83, 0.15, 0.1], ...
            'Tag', 'omegaInd1',...
            'String', {'1', '2', '3'}); %#ok<NASGU>
        omegaInd2 = uicontrol('Parent', tracePanel,...
            'Style', 'popupmenu', ...
            'Units', 'Normalized', ...
            'Position', [0.72, 0.75, 0.15, 0.1], ...
            'Tag', 'omegaInd2',... %'Callback', @updateIC, ...
            'String', {'1', '2', '3'}); %#ok<NASGU>
        iterChangeSigma = axes('Parent',tracePanel,...
            'units', 'normalized',...
            'Position',[0.05 0.45 0.67 0.20],...
            'Tag','iterChangeSigma'); %#ok<NASGU>
        textRowSigma = uicontrol('Parent',tracePanel,...
            'Style','text','units', 'normalized', ...
            'Position',[0.85, 0.53, 0.15, 0.1],...
            'String','Row Index','FontSize',myfont); %#ok<NASGU>
        textColSigma = uicontrol('Parent',tracePanel,...
            'Style','text','units', 'normalized', ...
            'Position',[0.85, 0.45, 0.15, 0.1],...
            'String','Col. Index','FontSize',myfont); %#ok<NASGU>
        sigmaInd1 = uicontrol('Parent', tracePanel,...
            'Style', 'popupmenu', ...
            'Units', 'Normalized', ...
            'Position', [0.72, 0.53, 0.15, 0.1], ...
            'Tag', 'sigmaInd1',...
            'String', {'1', '2', '3'}); %#ok<NASGU>
        sigmaInd2 = uicontrol('Parent', tracePanel,...
            'Style', 'popupmenu', ...
            'Units', 'Normalized', ...
            'Position', [0.72, 0.45, 0.15, 0.1], ...
            'Tag', 'sigmaInd2',... %'Callback', @updateIC, ...
            'String', {'1', '2', '3'}); %#ok<NASGU>
        iterChangeTau = axes('Parent',tracePanel,...
            'units', 'normalized',...
            'Position',[0.05 0.15 0.67 0.20],...
            'Tag','iterChangeTau'); %#ok<NASGU>
        textRowTau = uicontrol('Parent',tracePanel,...
            'Style','text','units', 'normalized', ...
            'Position',[0.85, 0.23, 0.15, 0.1],...
            'String','Row Index','FontSize',myfont); %#ok<NASGU>
        textColTau = uicontrol('Parent',tracePanel,...
            'Style','text','units', 'normalized', ...
            'Position',[0.85, 0.15, 0.15, 0.1],...
            'String','Col. Index','FontSize',myfont); %#ok<NASGU>
        tauInd1 = uicontrol('Parent', tracePanel,...
            'Style', 'popupmenu', ...
            'Units', 'Normalized', ...
            'Position', [0.72, 0.23, 0.15, 0.1], ...
            'Tag', 'tauInd1',...
            'String', {'1', '2', '3'}); %#ok<NASGU>
        tauInd2 = uicontrol('Parent', tracePanel,...
            'Style', 'popupmenu', ...
            'Units', 'Normalized', ...
            'Position', [0.72, 0.15, 0.15, 0.1], ...
            'Tag', 'tauInd2',... %'Callback', @updateIC, ...
            'String', {'1', '2', '3'}); %#ok<NASGU>
        textViewingGroup = uicontrol('Parent',tracePanel,...
            'Style','text','units', 'normalized', ...
            'Position',[0.85, 0.02, 0.15, 0.05],...
            'String','Group Ind.','FontSize',myfont); %#ok<NASGU>
        groupInd = uicontrol('Parent', tracePanel,...
            'Style', 'popupmenu', ...
            'Units', 'Normalized', ...
            'Position', [0.72, 0.01, 0.15, 0.06], ...
            'Tag', 'groupInd',...
            'String', {'1', '2'}); %#ok<NASGU>
        %%% Visualization Tab
        
        % Create figure panel
        figurePanel = uipanel('Parent', visualizeTab, 'units', 'normalized', ...
            'Tag', 'figurePanel',...
            'Position',[0.01 0.01 0.48 0.98],...
            'Title','Display','FontSize',myfont);
        resultsPanel = axes('Parent', figurePanel,...
            'units', 'normalized',...
            'Position',[0.01 0.01 0.96 0.96],...
            'Tag','resultsPanel', 'PlotBoxAspectRatio', [1 1 1]); %#ok<NASGU>
        % Load Result Panel
        loadResultPanel = uipanel('Parent', visualizeTab, 'units', 'normalized', ...
            'Tag', 'loadResultPanel',...
            'Position',[0.51 0.78 0.48 0.2],...
            'Title','Load Results','FontSize',myfont);
        loadResultButton = uicontrol('Parent', loadResultPanel, ...
            'Style', 'pushbutton', ...
            'String', 'Load Results', ...
            'Units', 'Normalized', ...
            'Position', [0.3, 0.1, 0.4, 0.8], ...
            'Tag', 'createMask', 'callback', @loadResults, ...
            'Visible', 'On'); %#ok<NASGU>
        % Create Selection Panel
        visSettingPanel = uipanel('Parent', visualizeTab, 'units', 'normalized', ...
            'Tag', 'visSettingPanel',...
            'Position',[0.51 0.45 0.48 0.3],...
            'Title','Select Parameter','FontSize',myfont);
        varSelect = uicontrol('Parent', visSettingPanel,...
            'Style', 'popupmenu', ...
            'Units', 'Normalized', ...
            'Position', [0.01, 0.63, 0.48, 0.1], ...
            'Tag', 'varSelect',...
            'String', {'Precision', 'Partial Correlation', 'Adjacency'}); %#ok<NASGU>
        groupSelect = uicontrol('Parent', visSettingPanel,...
            'Style', 'popupmenu', ...
            'Units', 'Normalized', ...
            'Position', [0.50, 0.63, 0.48, 0.1], ...
            'Tag', 'groupSelect',...
            'String', {'Group 1', 'Group 2', 'Group Difference'}); %#ok<NASGU>
        viewNewSelection = uicontrol('Parent', visSettingPanel, ...
            'Style', 'pushbutton', ...
            'String', 'View Selection', ...
            'Units', 'Normalized', ...
            'Position', [0.30, 0.10, 0.40, 0.25], ...
            'Tag', 'createMask', 'callback', @updateVisualization, ...
            'Visible', 'On'); %#ok<NASGU>
        % Options Panel
        visOptionsPanel = uipanel('Parent', visualizeTab, 'units', 'normalized', ...
            'Tag', 'visOptionsPanel',...
            'Position',[0.51 0.01 0.48 0.4],...
            'Title','Visualization Options','FontSize',myfont);
        textThreshold = uicontrol('Parent',visOptionsPanel,...
            'Style','text','units', 'normalized', ...
            'Position',[0.01, 0.85, 0.25, 0.15],...
            'String','Thresholding','FontSize',myfont); %#ok<NASGU>
        thresholdSlider =  uicontrol('Parent', visOptionsPanel,...
            'Style', 'Slider', ...
            'Units', 'Normalized', ...
            'Position', [0.1, 0.68, 0.8, 0.1], ...
            'Tag', 'thresholdSlider', ...
            'min', 0, 'max', 1, 'sliderstep', [0.01, 0.1], ...
            'callback', @editThreshold); %#ok<NASGU>
        textThresholdValue = uicontrol('Parent',visOptionsPanel,...
            'Style','text','units', 'normalized', ...
            'Position',[0.01, 0.45, 0.33, 0.17],...
            'String','Current Threshold:','FontSize',myfont); %#ok<NASGU>
        thresholdValueBox = uicontrol('Parent', visOptionsPanel,...
            'Tag','thresholdValueBox',...
            'units', 'normalized', ...
            'Style','edit','Position',[0.35, 0.46, 0.15, 0.15],...
            'FontSize',myfont,'HorizontalAlignment',textalign,...
            'BackgroundColor','white'); %#ok<NASGU>
        colorbarLimLabel = uicontrol('Style','text',...
            'parent', visOptionsPanel,...
            'String','Colorbar Limit:',...
            'units', 'normalized',...
            'position',[0.01,0.15,0.27,0.2], 'FontSize',myfont); %#ok<NASGU>
        colorbarLimits = uicontrol('Parent', visOptionsPanel, ...
            'Style', 'Edit', ...
            'Units', 'Normalized', ...
            'Position', [0.35 0.20, 0.15, 0.15], ...
            'Tag', 'colorbarLimits', ...
            'callback', @updateColorbarLimit); %#ok<NASGU>

        % Turn off all visualization options
        set(findall( findobj('tag', 'visSettingPanel') , '-property', 'enable'), 'enable', 'off')
        
    end

%%%%%%%%%%% General GUI Functions %%%%%%%%%%

% Delete the BJNL window.
    function closeFig(~,~)
        delete(hs.fig);
    end

%%% Data Input Panel %%%

% Function for selecting the output folder for the analysis
    function selectAnalysisFolder_Callback(~,~)
        folderName = uigetdir(pwd);
        if folderName==0
            folderName='';
        end
        data.outpath = folderName;
        set(findobj('Tag','analysisFolder'), 'String', folderName);
    end

% Function to select a .mat file with the input data
    function selectInputData_Callback(~,~)
        [filename, pathname] = uigetfile('*.mat','Select the MATLAB code file');
        
        % store the selected data file
        data.fname = [pathname filename];
        
        set(findobj('tag', 'analysisData'), 'string', data.fname);
        
        % Load the data and store the needed input
        tempData = load(data.fname);
        
        data.SS = tempData.SS;
        data.YY2 = tempData.YY2;
        data.membership = tempData.z;
        data.p = tempData.p;
        data.n = tempData.n;
        data.nsub = tempData.nsub;
        data.N = tempData.N;
        
        % Update the index selection for the trace plots to reflect the
        % number of nodes in the graph
        nodeCellArr = 1:data.p;
        set(findobj('tag', 'omegaInd1'), 'String', nodeCellArr);
        set(findobj('tag', 'omegaInd2'), 'String', nodeCellArr);
        set(findobj('tag', 'sigmaInd1'), 'String', nodeCellArr);
        set(findobj('tag', 'sigmaInd2'), 'String', nodeCellArr);
        set(findobj('tag', 'tauInd1'), 'String', nodeCellArr);
        set(findobj('tag', 'tauInd2'), 'String', nodeCellArr);
        
    end

    function runBJNLAnalysis(~,~)
        disp('Running Analysis');
        data.prefix = get(findobj('tag', 'prefixBox'), 'string');
        % Get the analysis settings
        nmc = str2double( get(findobj('Tag', 'numMCMCIter'), 'String') );
        burnin = str2double( get(findobj('Tag', 'numBURNIter'), 'String') );
        % Store the savefile name
        data.resultsName = [data.outpath '/mcmc_results.mat'];
        % Run the analysis
        BJNL_mcmc( data.YY2, data.SS, data.N, data.p, data.membership,...
            data.n, nmc, burnin, 0, data.outpath, data.prefix, data.nsub);
    end

%%% Visualization Tab

    function loadResults(~,~)
        
        % Load the results file
        [fname, fpath] = uigetfile('*.mat','Select the MCMC results file');
        results = load([fpath fname]);
        [results.p, ~, results.nGroup] = size(results.precMat);
        
        % Set the string for group selection
        groupList = cell(results.nGroup + 1, 1);
        for iGroup = 1:results.nGroup
            groupList{iGroup, 1} = ['Group ' num2str(iGroup)];
        end
        groupList{results.nGroup + 1, 1} = 'Group Difference';
        set(findobj('tag', 'groupSelect'), 'String', groupList);
        
        % Undisable the viewing options
        set(findall( findobj('tag', 'visSettingPanel') , '-property', 'enable'), 'enable', 'on')
    end

    function updateVisualization(~,~)
        
        % Create the colormap from blue to white to red
        bwr = zeros(3,3);
        bwr(1,:) = [1,0,0];
        bwr(2,:) = [1, 1, 1];
        bwr(3,:) = [0,0,1];
        valrange = [0 50 100];
        bwrmap = interp1(valrange/100, bwr, linspace(0,1,100));
        
        group = get(findobj('tag', 'groupSelect'), 'Value');
        selectedParameter = get(findobj('tag', 'varSelect'), 'String');
        results.selectedParameter = selectedParameter{ get(findobj('tag', 'varSelect'), 'Value') };
        
        % selectedData is the user selection, and currentData is the user
        % selection that actually gets edited (eg thresholded) and
        % displayed.
        % XXX change to switch
        if strcmp(results.selectedParameter, 'Precision')
            if group <= results.nGroup
                results.selectedData = results.precMat(:,:,group);
                results.currentData = results.precMat(:,:,group);
                results.plotTitle = ['Precision matrix values for group ' num2str(group) ];
            else
                results.selectedData = results.precMat(:,:,1) - results.precMat(:,:,2);
                results.currentData = results.selectedData;
                results.plotTitle = ['Difference in precision matrix values' ];
            end
            results.colorMap = bwrmap;
            results.colorLimit = max( abs( results.selectedData(:) ) );
            results.axisLims = [-results.colorLimit, results.colorLimit];
        end
        if strcmp(results.selectedParameter, 'Partial Correlation')
            if group <= results.nGroup
                results.selectedData = results.pCorrMat(:,:,group);
                results.currentData = results.pCorrMat(:,:,group);
                results.plotTitle = ['Partial correlation matrix values for group ' num2str(group) ];
                results.axisLims = [-1, 1];
            else
                results.selectedData = results.pCorrMat(:,:,1) - results.pCorrMat(:,:,2);
                results.currentData = results.selectedData;
                results.plotTitle = ['Difference in partial correlation matrix values' ];
                results.colorLimit = max( abs( results.selectedData(:) ) );
                results.axisLims = [-results.colorLimit, results.colorLimit];
            end
            results.colorMap = bwrmap;
            set( findobj('tag', 'thresholdSlider'), 'min', 0 );
            set( findobj('tag', 'thresholdSlider'), 'max', 1 );
            set( findobj('tag', 'colorbarLimit'), 'string', num2str(1) );
        end
        if strcmp(results.selectedParameter, 'Adjacency')
            if group <= results.nGroup
                results.selectedData = results.adjMatrix(:,:,group);
                results.currentData = results.adjMatrix(:,:,group);
                results.plotTitle = ['Adjacency Matrix for group ' num2str(group)] ;
                results.axisLims = [0, 1];
            else
                results.selectedData = results.adjMatrix(:,:,1) - results.adjMatrix(:,:,2);
                results.currentData = results.selectedData;
                results.plotTitle = 'Difference in Adjacency Matrices'
                results.axisLims = [-1, 1];
            end
            results.colorMap = flipud(gray);
            results.colorLimit = 1;
        end
        
        updateVisualizationOptions;
        visDisplay;
        
    end

    function updateVisualizationOptions(~,~)
        
        % Whether or not the edit threshold bar should display and its
        % maximum values
        if strcmp(results.selectedParameter, 'Adjacency')
            set(findobj('Tag', 'visOptionsPanel'), 'Visible', 'Off');
        else
            set(findobj('Tag', 'visOptionsPanel'), 'Visible', 'On');
            set(findobj('Tag', 'thresholdPanel'), 'Visible', 'On');
            set(findobj('Tag', 'colorbarPanel'), 'Visible', 'On');
            set(findobj('Tag', 'colorbarLimits'), 'String', num2str(results.colorLimit));
            if strcmp(results.selectedParameter, 'Precision')
                % Set the threshold slider to go from 0 the max of the
                % precision matrix
                set( findobj('tag', 'thresholdValueBox'), 'String', num2str(0) );
                set( findobj('tag', 'thresholdSlider'), 'value', 0 );
                set( findobj('tag', 'thresholdSlider'), 'min', 0 );
                set( findobj('tag', 'thresholdSlider'), 'max',...
                    max(results.selectedData(:)) );
            else
                set( findobj('tag', 'thresholdSlider'), 'value', 0 );
                set( findobj('tag', 'thresholdSlider'), 'min', 0 );
                set( findobj('tag', 'thresholdSlider'), 'max', 1 );
                set( findobj('tag', 'thresholdValueBox'), 'String', num2str(0) );
            end
        end
        
    end

% Function to display based on user selection
    function visDisplay(~,~)
        axes(findobj('tag','resultsPanel'));
        set(gca,'NextPlot','add');
        imagesc(results.currentData)
        caxis( results.axisLims );
        xlim( [0,results.p] );
        ylim( [0,results.p] );
        colormap(results.colorMap);
        colorbar;
        title(results.plotTitle);
        pbaspect([1 1 1]);
    end

    function editThreshold(~, ~)
        % Get user selected cutoff
        cutoff = get( findobj('Tag', 'thresholdSlider'), 'value');
        %set( findobj('Tag', 'manualThreshold'), 'string', num2str(cutoff) );
        % Redisplay the heatmap using the threshold
        mask = abs( results.selectedData ) >= cutoff ;
        results.currentData = results.selectedData .* mask;
        % Update the thresholded value box
        set( findobj('tag', 'thresholdValueBox'), 'String', num2str(cutoff) );
        visDisplay;
    end

% Function to allow the user to change the colorbar limits
    function updateColorbarLimit(~, ~)
        newLimit = get( findobj('Tag', 'colorbarLimits'), 'string');
        if ~all(ismember(newLimit, '0123456789+-.eEdD')) || isempty(newLimit)
            warndlg('Please input a valid number', 'Input Error');
            set( findobj('Tag', 'colorbarLimits'), 'string', results.colorLimit);
        end
        results.colorLimit = str2double(get( findobj('Tag', 'colorbarLimits'), 'string'));
        results.axisLims = [ -results.colorLimit, results.colorLimit ];
        % Redisplay
        visDisplay;
    end

end
